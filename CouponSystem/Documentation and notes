

Tests:

1. ViewDB - shows the different tables and the content - print it to the console only
2. Demo1 - tests for customer related methods on the DBDAO classes
3. Demo2 -
4. Demo3 -
5. GetAll -

BEANS:
coupon.sys.beans - JavaBeans. Basic objects of the project. Have getters and setters and 2 CTORs - one with ID and the other without.
The logic is that the ID is set by the DB (increasing numeric and unique). so to be able to create a Customer/Coupon/Company objects with or without
ID there are the 2 CTORs.


Facade - In order to be able to identify the logged in customer/company the CustomerFacade and Company facade holds an attribute of these instances that
logged in and we can identify the relevant user in order to differentiate between users when getting data.

JOIN tables handling - after some thoughts I decided to handle it by giving the method both the coupon and the company that
created it or the customer that purchased it. The client side - in order to create/remove coupon will have to provide the customer/company
as well. There will be overload of the create/remove coupons so according to the provided information it will be created/removed